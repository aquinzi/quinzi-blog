<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>A-Qute blog</title><link>http://blog.aquinzi.com/</link><description>Blog for A.Q.</description><atom:link href="http://blog.aquinzi.com/rss.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Tue, 09 Feb 2016 11:17:30 GMT</lastBuildDate><generator>nikola</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Instalar Jekyll (y Ruby) en Windows</title><link>http://blog.aquinzi.com/windows-jekyll/</link><dc:creator>A.Q.</dc:creator><description>&lt;p&gt;Pequeña guía para tener una instalación de GitHub Pages en Windows, para testear Jekyll antes de "pushear" los cambios. Recomendado cuando estas haciendo un theme de un blog o creando un sitio.&lt;/p&gt;
&lt;h2 id="instalar-ruby"&gt;Instalar Ruby&lt;/h2&gt;
&lt;p&gt;Se necesita Ruby y Ruby Dev-kit para poder instalar los "gems".&lt;/p&gt;
&lt;p&gt;Primero descargar ruby de &lt;a href="http://rubyinstaller.org/downloads/"&gt;Ruby Installer&lt;/a&gt;. Al instalar, checkear la opcion de "&lt;code&gt;Add Ruby executables to your PATH&lt;/code&gt;".&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;Al 2016-02-09, GitHub Pages usa la versión 2.1.7; la mas cercana listada es la 2.1.8. Podes descargar el instalador de Ruby 2.1.7 en los &lt;a href="http://rubyinstaller.org/downloads/archives"&gt;archivos&lt;/a&gt; cosa de asegurarte.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Del &lt;a href="http://rubyinstaller.org/downloads/"&gt;mismo sitio&lt;/a&gt;, descargar el Ruby DevKit correspondiente a la versión. La descarga es un archivo descomprimible &lt;code&gt;.exe&lt;/code&gt;. Descomprimirlo en alguna carpeta sin espacios (por ejemplo: &lt;code&gt;C:\Ruby\DevKit\&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Para "unir" el devkit e instalarlo, seguir los siguientes pasos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;con la línea de comandos ir a la carpeta (&lt;code&gt;cd path\carpeta\&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Ejecutar &lt;code&gt;ruby dk.rb init&lt;/code&gt;, esto auto-detecta las instalaciones de Ruby y añade a un archivo de configuración necesario para el próximo paso.&lt;/li&gt;
&lt;li&gt;Ejecutar &lt;code&gt;ruby dk.rb install&lt;/code&gt; para "unir" el DevKit.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;Si da error de "Comando no encontrado" verificar que en el &lt;code&gt;PATH&lt;/code&gt; este como &lt;code&gt;[path\a\ruby\]bin\&lt;/code&gt; (notar barra invertida final)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;~~Si vas a necesitar "Syntax Highlighting" y elegiste &lt;code&gt;pygments&lt;/code&gt;, tenés que instalar Python (para Jekyll 2 o inferior).~~&lt;/p&gt;
&lt;p&gt;Al 2016-02-09, GitHub Pages solo acepta &lt;a href="https://github.com/jneen/rouge"&gt;Rouge&lt;/a&gt; para "Syntax Highlighting" (escrito en Ruby).&lt;/p&gt;
&lt;h2 id="github-pages-local-instalacion-de-jekyll-y-complementos"&gt;GitHub Pages local: instalación de Jekyll y complementos&lt;/h2&gt;
&lt;p&gt;En Windows no se puede instalar el &lt;a href="https://help.github.com/articles/using-jekyll-with-pages/#installing-jekyll"&gt;gem de GitHub Pages&lt;/a&gt; por que tira error al querer instalar RDiscount, porque (según cita):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(RDiscount) It uses a POSIX function that is not available under Windows, even if you adjusted most of it. &lt;/p&gt;
&lt;p&gt;(&lt;a href="http://superuser.com/a/87438"&gt;Luis Lavena en Super User&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="admonition info"&gt;
&lt;p class="admonition-title"&gt;Info&lt;/p&gt;
&lt;p&gt;Al 2016-02-09, GitHub Pages solo acepta &lt;a href="http://kramdown.gettalong.org/"&gt;kramdown&lt;/a&gt;; desconozco si sigue tratando de descargar RDiscount (parece que si).&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Por esto, es mejor instalar bundler (&lt;code&gt;gem install bundler&lt;/code&gt;) y usar un &lt;code&gt;gemfile&lt;/code&gt; (llamado "Gemfile") en donde se encuentra el proyecto, listando lo de arriba con las versiones que se usan:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;    &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="s1"&gt;'https://rubygems.org'&lt;/span&gt;

    &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"json"&lt;/span&gt;
    &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"open-uri"&lt;/span&gt;
    &lt;span class="c1"&gt;#get versions specific to github&lt;/span&gt;
    &lt;span class="n"&gt;versions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"https://pages.github.com/versions.json"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"jekyll"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"jekyll"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"jekyll-coffeescript"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"jekyll-coffeescript"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"jekyll-sass-converter"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"jekyll-sass-converter"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"kramdown"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"kramdown"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="c1"&gt;#gem "maruku", versions["maruku"] #jekyll 3.0 uses kramdown&lt;/span&gt;
    &lt;span class="c1"&gt;#gem "rdiscount", versions["rdiscount"] #we cant install it in windows&lt;/span&gt;
    &lt;span class="c1"&gt;#gem "redcarpet", versions["redcarpet"] #no support in GH pages (2016-02-09)&lt;/span&gt;
    &lt;span class="c1"&gt;#gem "pygments.rb", versions["pygments.rb"] #no support in GH pages (2016-02-09)&lt;/span&gt;
    &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"rouge"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"rouge"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;#for code highlighting&lt;/span&gt;
    &lt;span class="c1"&gt;#gem "RedCloth", versions["RedCloth"] #textile, no support in GH pages (2016-02-09)&lt;/span&gt;
    &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"liquid"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"liquid"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"jemoji"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"jemoji"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"jekyll-mentions"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"jekyll-mentions"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"jekyll-redirect-from"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"jekyll-redirect-from"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"jekyll-sitemap"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"jekyll-sitemap"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"jekyll-feed"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"jekyll-feed"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"jekyll-seo-tag"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"jekyll-seo-tag"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="c1"&gt;#gem "ruby", versions["ruby"] #avoid problems in windows&lt;/span&gt;
    &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"github-pages"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"github-pages"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"html-pipeline"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"html-pipeline"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"sass"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"sass"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"safe_yaml"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"safe_yaml"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(idea del código de &lt;a href="https://jamesjoshuahill.github.io/note/2015/01/08/handling-failed-builds-on-github-pages/"&gt;jamesjoshuahill&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Se instalan los gems (con bundler) yendo al directorio con el Gemfile y ejecutar &lt;code&gt;bundle install&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Puede haber problemas con el certificado de &lt;code&gt;https://rubygems.org&lt;/code&gt;. Si no se quiere probar, instalar (eliminado rdiscount, sin documentacion) los gems con el siguiente comando (al 2015-09-28):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;gem install jekyll:3.0.2 --no-rdoc --no-ri jekyll-sass-converter:1.3.0 --no-rdoc --no-ri jekyll-textile-converter:0.1.0 --no-rdoc --no-ri kramdown:1.9.0 --no-rdoc --no-ri redcarpet:3.3.3 --no-rdoc --no-ri RedCloth:4.2.9 --no-rdoc --no-ri liquid:3.0.6 --no-rdoc --no-ri rouge:1.10.1 --no-rdoc --no-ri jemoji:0.5.1 --no-rdoc --no-ri jekyll-mentions:1.0.0 --no-rdoc --no-ri jekyll-redirect-from:0.9.1 --no-rdoc --no-ri jekyll-sitemap:0.10.0 --no-rdoc --no-ri jekyll-feed:0.3.1 --no-rdoc --no-ri jekyll-gist:1.4.0 --no-rdoc --no-ri jekyll-paginate:1.1.0 --no-rdoc --no-ri github-pages-health-check:0.6.0 --no-rdoc --no-ri jekyll-coffeescript:1.0.1 --no-rdoc --no-ri jekyll-seo-tag:0.1.4 --no-rdoc --no-ri ruby:2.1.7 --no-rdoc --no-ri github-pages:45 --no-rdoc --no-ri html-pipeline:2.3.0 --no-rdoc --no-ri sass:3.4.21 --no-rdoc --no-ri safe_yaml:1.0.4 --no-rdoc --no-ri
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;El error de certificado es un similar a:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;[!] There was an error parsing `Gemfile`: SSL_connect returned=1 
errno=0 state=SSLv3 read server certificate B: certificate verify 
failed. Bundler cannot continue.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Se soluciona de la siguiente manera:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://curl.haxx.se/ca/cacert.pem"&gt;descargar&lt;/a&gt; el archivo &lt;code&gt;cacert.pem&lt;/code&gt; y guardarlo en (por ejemplo ejemplo) &lt;code&gt;C:\RailsInstaller\cacert.pem&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Settear el &lt;code&gt;SSL_CERT_FILE&lt;/code&gt; usando la línea de comandos: &lt;code&gt;set SSL_CERT_FILE=C:\RailsInstaller\cacert.pem&lt;/code&gt;. Se puede dejar "permanente" poniendolo en el &lt;code&gt;PATH&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;También se puede hacer por proyecto:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Guardar el archivo &lt;code&gt;cacert.pem&lt;/code&gt; en el proyecto.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A list item with a code block:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;ENV['SSL_CERT_FILE'] = File.expand_path(File.dirname(__FILE__)) + "/config/cacert.pem"
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="correr-jekyll"&gt;Correr Jekyll&lt;/h2&gt;
&lt;p&gt;Seguramente va a tirar un error de encoding, estilo:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;jekyll 2.4.0 | Error:  incompatible character encodings: CP850 and UTF-8
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;para solucionarlo ejecutar en la línea de comandos &lt;code&gt;chcp 65001&lt;/code&gt; antes de ejecutar Jekyll.&lt;/p&gt;
&lt;p&gt;En la carpeta donde se tiene los archivos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Si se usó el fix de OpenSSL, hay que usar bundler: &lt;code&gt;bundle exec jekyll serve&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Si no: &lt;code&gt;jekyll serve&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Abrir en &lt;code&gt;http://127.0.0.1:4000/&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Fuentes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jekyll-windows.juthilo.com/"&gt;Run Jekyll on Windows: Step by step guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://railsapps.github.io/openssl-certificate-verify-failed.html"&gt;Solución al &lt;code&gt;SSL_connect&lt;/code&gt;&lt;/a&gt;, que linkea a &lt;a href="https://gist.github.com/fnichol/867550"&gt;un gist con las instrucciones&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bendetat.com/utf-issue-when-running-jekyll-on-windows.html"&gt;UTF issue when running Jekyll on Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section id="changes"&gt;

Cambios
---------

  #. &lt;time&gt;2016-02-09&lt;/time&gt; actualización a GitHub Pages usando Jekyll 3

&lt;/section&gt;</description><guid>http://blog.aquinzi.com/windows-jekyll/</guid><pubDate>Tue, 29 Sep 2015 00:00:00 GMT</pubDate></item><item><title>Pelican to Nikola (and tutorial)</title><link>http://blog.aquinzi.com/pelican-nikola/</link><dc:creator>A.Q.</dc:creator><description>&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/pelican-nikola/#acrylamid"&gt;Acrylamid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/pelican-nikola/#nikola"&gt;Nikola&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/pelican-nikola/#the-moving"&gt;The moving&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/pelican-nikola/#install-nikola"&gt;Install Nikola&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/pelican-nikola/#initiate"&gt;Initiate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/pelican-nikola/#convert-metadata"&gt;Convert metadata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/pelican-nikola/#translations"&gt;Translations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/pelican-nikola/#images-paths"&gt;Images paths&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/pelican-nikola/#links-between-posts"&gt;Links between posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/pelican-nikola/#plugins-syntax"&gt;Plugins syntax&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/pelican-nikola/#other-nikola-stuff"&gt;Other Nikola stuff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/pelican-nikola/#locale-in-windows"&gt;Locale in Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/pelican-nikola/#linking-internally"&gt;Linking internally&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/pelican-nikola/#pandoc"&gt;Pandoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/pelican-nikola/#posts-folder-and-subfolders"&gt;Posts folder and subfolders&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/pelican-nikola/#testing"&gt;Testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;When I was thinking of moving my blog to this new domain, I thought of using &lt;a href="http://www.johnmacfarlane.net/pandoc/"&gt;Pandoc&lt;/a&gt; as the converter&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="http://blog.aquinzi.com/pelican-nikola/#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;. I even created &lt;a href="http://aquinzi.com/projects/pandy.php"&gt;pandy&lt;/a&gt; for that. But then I run into the "problems" (ok, I was kind of lazy) of generating RSS, listing posts with certain tags or categories (which I ended up not using), the index and archive, idealizing of using plugins, etc. and gave up. &lt;/p&gt;
&lt;p&gt;In the beginning, I would &lt;a href="link://slug/wordpress-to-pelican"&gt;continue using Pelican&lt;/a&gt; as is &lt;a href="http://docs.getpelican.com/"&gt;it's easy and customizable&lt;/a&gt;, even though it doesn't have Pandoc&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="http://blog.aquinzi.com/pelican-nikola/#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; support. But later I would be lazy to move to another system (not that I blog much, but &lt;strong&gt;I like Pandoc's markdown&lt;/strong&gt;).&lt;/p&gt;
&lt;h2 id="acrylamid"&gt;Acrylamid&lt;/h2&gt;
&lt;p&gt;In my searching, I found &lt;a href="http://posativ.org/acrylamid/index.html"&gt;Acrylamid&lt;/a&gt; which looks pretty good. It's like the programmer/hacker blog generator, where you can do many things, including using template syntax &lt;em&gt;inside&lt;/em&gt; your post. How cool is that?. It also has incremental builds, which means that it won't regenerate the whole site/blog again after a little edit, but only what it was changed. &lt;/p&gt;
&lt;p&gt;Other cool things include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;different meta tags: you can choose between MultiMarkdown (like Pelican), YAML or rst.&lt;/li&gt;
&lt;li&gt;the draft status is a boolean. Yay!.&lt;/li&gt;
&lt;li&gt;you can &lt;a href="http://posativ.org/acrylamid/advanced.html#jinja2-or-mako-in-entry"&gt;include template syntax inside your posts&lt;/a&gt; and you can even use the configuration variables!&lt;/li&gt;
&lt;li&gt;automatic summary/intro&lt;/li&gt;
&lt;li&gt;user custom acronyms and abbreviations in a text file.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://posativ.org/acrylamid/views.html"&gt;the views things&lt;/a&gt; that looks cool that I couldn't understand first but then I got the hang of it (they are very customizable)&lt;/li&gt;
&lt;li&gt;colored command line output. THANK YOU!&lt;/li&gt;
&lt;li&gt;out of the box pingbacking to other blogs and twitter posting.&lt;/li&gt;
&lt;li&gt;info about the blog: how many published, drafts, tag usage count. Also when was last compiled, cache size...&lt;/li&gt;
&lt;li&gt;&lt;a href="http://posativ.org/acrylamid/advanced.html#using-the-system-s-shell"&gt;execute shell commands in the post&lt;/a&gt;: like listing a directory, include another file, etc.&lt;/li&gt;
&lt;li&gt;serve the site with a command&lt;/li&gt;
&lt;li&gt;post-processing filters&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It doesn't have categories (but by using views &lt;a href="https://github.com/posativ/acrylamid/issues/121"&gt;seems like it's posible&lt;/a&gt;), automatic galleries creation (but you can use template syntax inside the post, &lt;a href="http://posativ.org/acrylamid/howtos.html#image-gallery"&gt;so is covered&lt;/a&gt;) and the &lt;a href="http://posativ.org/acrylamid/theming.html"&gt;theme creation&lt;/a&gt; it's not so automatic: you must list all the files that the theme uses inside an &lt;code&gt;__init.py&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;I really wanted to use Acrylamid, even without the missing bits, but it was kind of "complicated" to set up on Windows if you wanted to use &lt;a href="https://github.com/ahupp/python-magic"&gt;python-magic&lt;/a&gt; (at least I have problems with it). I skipped that part but for some kind of reason I was getting errors with the locale setting. I tested it with "Linux locale" and "Windows locale" and both threw me errors.&lt;/p&gt;
&lt;h2 id="nikola"&gt;Nikola&lt;/h2&gt;
&lt;p&gt;Then I remembered I once stumbled upon &lt;a href="http://getnikola.com/"&gt;Nikola&lt;/a&gt;, originally created by an Argentinian guy, so yeah, I had to try it out :P.&lt;/p&gt;
&lt;p&gt;It does have &lt;a href="http://www.johnmacfarlane.net/pandoc/"&gt;Pandoc&lt;/a&gt; support; but it's not as "feature rich" (or easy customizable) as &lt;a href="http://docs.getpelican.com/"&gt;Pelican&lt;/a&gt;, and the documentation it's not so "complete" if you will. There are a couple of things that are not documented and you must find it in the Google Groups, GitHub or looking in the code. And also, not so feature-cool like &lt;a href="http://posativ.org/acrylamid/index.html"&gt;Acrylamid&lt;/a&gt;. However, I think it's on a good track and it's the newest of the three.&lt;/p&gt;
&lt;p&gt;It has cool things too:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;incremental builds (like Acryamid)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://getnikola.com/handbook.html#image-galleries"&gt;automatic gallery creation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;categories (like Pelican)&lt;/li&gt;
&lt;li&gt;easy themable (like Pelican)&lt;/li&gt;
&lt;li&gt;serve the site with a command and it has "Live" re-rendering &lt;/li&gt;
&lt;li&gt;&lt;a href="http://getnikola.com/handbook.html#retired-posts"&gt;retired posts&lt;/a&gt; (so no 404 errors)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://getnikola.com/handbook.html#redirections"&gt;redirections&lt;/a&gt; (in case you can't use &lt;code&gt;.htaccess&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://getnikola.com/handbook.html#deployment"&gt;deploy commands&lt;/a&gt; (a bunch of commands to run, so you don't have to script it)&lt;/li&gt;
&lt;li&gt;post-processing filters&lt;/li&gt;
&lt;li&gt;internationalization support (the site/blog interface can be in many languages)&lt;/li&gt;
&lt;li&gt;password protected posts/pages&lt;/li&gt;
&lt;li&gt;&lt;a href="http://getnikola.com/handbook.html#queuing-posts"&gt;"Schedule"&lt;/a&gt; posts/pages &lt;/li&gt;
&lt;li&gt;Wide range of (3rd party) comment systems and &lt;a href="http://annotateit.org"&gt;AnnotateIt&lt;/a&gt; support.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://getnikola.com/handbook.html#restructuredtext-extensions"&gt;reStructuredText Extensions&lt;/a&gt; (if you use that).&lt;/li&gt;
&lt;li&gt;Support for Twitter cards&lt;/li&gt;
&lt;li&gt;raw post/page support (to show the source in text)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The draft state is applied in the "tag" metadata instead of a separate one, and they are deployed by default; it has no color support for the command line (but I think it's in the talks) and the "show source of the post and copy it" it's enabled by default.&lt;/p&gt;
&lt;h2 id="the-moving"&gt;The moving&lt;/h2&gt;
&lt;h3 id="install-nikola"&gt;Install Nikola&lt;/h3&gt;
&lt;p&gt;You start first by &lt;a href="http://getnikola.com/"&gt;getting Nikola&lt;/a&gt; and installing it. By default, it uses &lt;a href="http://makotemplates.org"&gt;Mako&lt;/a&gt; as the template engine, but it has support for &lt;a href="http://jinja.pocoo.org/"&gt;Jinja2&lt;/a&gt;. You can read about the &lt;a href="http://getnikola.com/handbook.html#installing-nikola"&gt;dependencies in the documentation page&lt;/a&gt; and if you want, you can use &lt;code&gt;pip install -r requirements.txt&lt;/code&gt; or &lt;code&gt;requirements-full.txt&lt;/code&gt; for the whole thing.&lt;/p&gt;
&lt;p&gt;If you are running Windows, you must download and install the compiled versions of lxml and pillow. You can check in their &lt;a href="https://pypi.python.org/"&gt;PyPI pages&lt;/a&gt; or you can go to &lt;a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/"&gt;http://www.lfd.uci.edu/~gohlke/pythonlibs/&lt;/a&gt; and get them there. Remember to download and install according to your Python version and architecture (32 or 64 bits).&lt;/p&gt;
&lt;h3 id="initiate"&gt;Initiate&lt;/h3&gt;
&lt;p&gt;To initiate or create an empty site with the default settings and folder structures, run either &lt;code&gt;nikola init path/to/mysite&lt;/code&gt; or, if you want some demo content, &lt;code&gt;nikola init --demo path/to/mysite&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id="convert-metadata"&gt;Convert metadata&lt;/h3&gt;
&lt;p&gt;Pelican uses the &lt;a href="https://github.com/fletcher/MultiMarkdown/wiki/MultiMarkdown-Syntax-Guide"&gt;Multimarkdown&lt;/a&gt; style of metadata while Nikola uses something similar: the same syntax but with &lt;code&gt;..&lt;/code&gt; in front.&lt;/p&gt;
&lt;p&gt;An example would be:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;Title: nice title! :D      # Pelican
.. title: nice title! :D   # Nikola
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can do that by hand or &lt;a href="https://gist.github.com/aquinzi/8377090"&gt;download my python script&lt;/a&gt; to take care of that. It also moves "draft" status to Nikola's tag, and Pelican's summary to Nikola's description (activated by default). &lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;Nikola doesn't have/see the "modified" meta key internally, but you can have it like a custom key. You just access it differently in the themes.&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id="translations"&gt;Translations&lt;/h3&gt;
&lt;p&gt;If you have posts or pages translations you must pay attention: Nikola handles the translations differently from Pelican. While in Pelican you only set the same slug or title in the posts, and have different file names (I think); Nikola relies on the file names.&lt;/p&gt;
&lt;p&gt;The easiness of this depends on your setup, but you must end up with something like: &lt;code&gt;nicefile.md&lt;/code&gt; for the post in default language, and &lt;code&gt;nicefile.md.es&lt;/code&gt; (spanish content) for the translated file.&lt;/p&gt;
&lt;p&gt;The cool thing of this is that you don't have to duplicate the meta tags. For example, you just create the "tags" meta key in the default language but don't specify it in the translated one. So when you update, you do only in the "master" or "parent" file and the "child" just copies it. &lt;/p&gt;
&lt;p&gt;If you don't feel like having duplicated metadata between files, and after you renamed and converted them, you can run &lt;a href="https://gist.github.com/aquinzi/8377186"&gt;this python script&lt;/a&gt; to delete them. Remember this is optional (or at least it didn't break my setup).&lt;/p&gt;
&lt;h3 id="images-paths"&gt;Images paths&lt;/h3&gt;
&lt;p&gt;The syntax on this is also different but it can be easily done with search and replace. You can use whatever you want, like grep. If you are on Windows, I recommend &lt;a href="http://stefanstools.sourceforge.net/grepWin.html"&gt;grepWin&lt;/a&gt; if you want something with a GUI. This changes from setup to setup, but my settings were:&lt;/p&gt;
&lt;p&gt;For markdown syntax:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Search &lt;code&gt;(|filename|../../images/&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;(/images/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And for HTML:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Search &lt;code&gt;&amp;lt;img src="../../static/images/&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Replace &lt;code&gt;&amp;lt;img src="../images/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="links-between-posts"&gt;Links between posts&lt;/h3&gt;
&lt;p&gt;Again, this is totally different between the systems and it's going to be very easy or really difficult depending on your setup: Pelican uses the filenames for linking content while Nikola uses the slug of the post.&lt;/p&gt;
&lt;p&gt;If you have the filename like the slug (or very similar) you can search and replace again. Like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Search: &lt;code&gt;\(\|filename\|(.+)\.md\)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Replace: &lt;code&gt;(link://slug/$1)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I recommend doing it after the images, and you must check the links afterwards.&lt;/p&gt;
&lt;h3 id="plugins-syntax"&gt;Plugins syntax&lt;/h3&gt;
&lt;p&gt;I didn't use many plugins that used syntax in my posts, just only one: &lt;a href="http://aquinzi.com/projects/interlinks.php"&gt;interlinks&lt;/a&gt;. This was easilly done with search and replace.&lt;/p&gt;
&lt;h2 id="other-nikola-stuff"&gt;Other Nikola stuff&lt;/h2&gt;
&lt;h3 id="locale-in-windows"&gt;Locale in Windows&lt;/h3&gt;
&lt;p&gt;If you are going to use the internationalization in Windows, you must configurate your &lt;code&gt;LOCALES&lt;/code&gt; as (example):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;LOCALES = {'en' : 'English_United States', 'es' : 'Spanish_Argentina'}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It doesn't matter your Windows language setting, I think it only accepts english locales (I tested it with Windows in Spanish and it worked).&lt;/p&gt;
&lt;h3 id="linking-internally"&gt;Linking internally&lt;/h3&gt;
&lt;p&gt;If you want to link to another post, tag, archive, etc.:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gallery: &lt;code&gt;link://gallery/gallery_name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;tags index: &lt;code&gt;link://tag_index&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;tag's page: &lt;code&gt;link://tag/tagname&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;tag's RSS feed: &lt;code&gt;link://tag_rss/tagname&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;blog's index page: &lt;code&gt;link://index&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;index [NUMBER] page: &lt;code&gt;link://index/NUMBER&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;per-year archive: &lt;code&gt;link://archive/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;posts of [YEAR] &lt;code&gt;link://archive/YEAR&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;blog's feed: &lt;code&gt;link://rss&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;other post: &lt;code&gt;link://slug/the-nice-slug&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="pandoc"&gt;Pandoc&lt;/h3&gt;
&lt;p&gt;As Pandoc uses the extension to recognize the input, you must configurate that extension in the &lt;code&gt;COMPILERS&lt;/code&gt; option in the configuration file. If it's not found, it uses Markdown as default.&lt;/p&gt;
&lt;p&gt;While it worked for me using markdown, it didn't exactly work with some others, like Mediawiki. I don't know why.&lt;/p&gt;
&lt;h3 id="posts-folder-and-subfolders"&gt;Posts folder and subfolders&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://getnikola.com/"&gt;Nikola&lt;/a&gt; preserves the folder structure of the posts in the subfolders. If you have &lt;code&gt;file_g.txt&lt;/code&gt; inside &lt;code&gt;folder_abc&lt;/code&gt;, that structure is kept in the output. It can be good if you want to use it as categories in the output. There is no way to configurate it in the configuration.&lt;/p&gt;
&lt;p&gt;In &lt;a href="http://docs.getpelican.com/"&gt;Pelican&lt;/a&gt; you can have many subfolders and sort of categorize your posts as you wish, and the output is configurated (by default, by date) as you want.&lt;/p&gt;
&lt;h2 id="testing"&gt;Testing&lt;/h2&gt;
&lt;p&gt;Initially your posts go to a &lt;code&gt;posts&lt;/code&gt; folder in your root and the pages in &lt;code&gt;story&lt;/code&gt;. The images folder would go to &lt;code&gt;files&lt;/code&gt;. You can configurate all of this in the configuration file.&lt;/p&gt;
&lt;p&gt;After configurating your &lt;code&gt;conf.py&lt;/code&gt;, which is very well commented, you can try it. &lt;/p&gt;
&lt;p&gt;Build the site with &lt;code&gt;nikola build&lt;/code&gt;. Then you can drag and drop pages to a browser or use the serve command: &lt;code&gt;nikola serve&lt;/code&gt; and pointing your browser to &lt;code&gt;http://127.0.0.1:8000&lt;/code&gt;&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Because I hate opening an HTML block tag and the markdown inside is not parsed. I know, it's said in the &lt;a href="http://daringfireball.net/projects/markdown/"&gt;markdown&lt;/a&gt; reference, but hey: &lt;strong&gt;it's 2014&lt;/strong&gt; and I need that. But I still love the admonition implementation in &lt;a href="http://pythonhosted.org/Markdown/"&gt;Python-Markdown&lt;/a&gt; &lt;a class="footnote-backref" href="http://blog.aquinzi.com/pelican-nikola/#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;Which &lt;a href="http://docs.getpelican.com/en/3.3.0/internals.html#how-to-implement-a-new-reader"&gt;now I see&lt;/a&gt; it looks pretty easy to implement. Oh well. &lt;a class="footnote-backref" href="http://blog.aquinzi.com/pelican-nikola/#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><category>pelican</category><category>nikola</category><category>static</category><category>python</category><category>windows</category><guid>http://blog.aquinzi.com/pelican-nikola/</guid><pubDate>Sat, 11 Jan 2014 00:00:00 GMT</pubDate></item><item><title>GitHub Pages for projects</title><link>http://blog.aquinzi.com/gh-pages-project/</link><dc:creator>A.Q.</dc:creator><description>&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/gh-pages-project/#programs-for-windows"&gt;Programs for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/gh-pages-project/#create-repository"&gt;Create repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/gh-pages-project/#activate-github-pages"&gt;"Activate" GitHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/gh-pages-project/#get-it-in-desktop-to-work-with-it"&gt;Get it in desktop (to work with it)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/gh-pages-project/#prepare-gh-pages-branch"&gt;Prepare gh-pages branch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/gh-pages-project/#gh-pages-as-default-and-delete-master"&gt;gh-pages as default and delete master&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/gh-pages-project/#its-alive-testing-file-and-upload"&gt;It's alive! (Testing file and upload)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/gh-pages-project/#custom-domain"&gt;Custom domain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/gh-pages-project/#404-pages-everyone-loves-error-pages"&gt;404 pages! (Everyone loves error pages)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Simple steps to create &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt; for projects/per repo (not user nor organization) plus some other stuff.&lt;/p&gt;
&lt;p&gt;The steps are for CLI and for GitHub for Windows (TortoiseGit is "similar" to Git CLI) and Git beginners oriented, who search for easiness and not so much fuss. However, if you're confortable using SVN, you can use it (&lt;a href="https://help.github.com/articles/support-for-subversion-clients"&gt;see clients in GitHub&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Abbreviations and vocabulary:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;dfn&gt;git CLI&lt;/dfn&gt;&lt;/dt&gt;
&lt;dd&gt;Git used in a terminal/command line.&lt;/dd&gt;

&lt;dt&gt;&lt;dfn&gt;GW&lt;/dfn&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a href="http://windows.github.com/"&gt;GitHub for Windows&lt;/a&gt;.&lt;/dd&gt;

&lt;dt&gt;&lt;dfn&gt;Tortoise&lt;/dfn&gt;&lt;/dt&gt;
&lt;dd&gt;TortoiseGit.&lt;/dd&gt;

&lt;dt&gt;&lt;dfn&gt;Server&lt;/dfn&gt;&lt;/dt&gt;
&lt;dd&gt;Where things are "hosted" (like GitHub). This doesn't exist in Git, but this is how beginners can understand better (remote repository).&lt;/dd&gt;
&lt;dd&gt;"Central server" if you're comming from SVN. &lt;/dd&gt;

&lt;dt&gt;&lt;dfn&gt;repo&lt;/dfn&gt;&lt;/dt&gt;
&lt;dd&gt;To make things easier, take "repo" like "principal or remote repository" or "server" (see definition).&lt;/dd&gt;

&lt;dt&gt;&lt;dfn&gt;origin&lt;/dfn&gt;&lt;/dt&gt;
&lt;dd&gt;This is how you name the original "remote repository" and by convention the 'primary' cetralized repository.&lt;/dd&gt;

&lt;dt&gt;&lt;dfn&gt;c-p&lt;/dfn&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;commit&lt;/code&gt; followed by &lt;code&gt;push&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;h2 id="programs-for-windows"&gt;Programs for Windows&lt;/h2&gt;
&lt;p&gt;In the beginning, having Git in Windows was hard (because it was created by and for Linux) but now there are many options. Usually, if you are only going to use GitHub, GW is recommended. However, if you want to use Git for other things (like creating "servers" locally to play or test) I recommend &lt;a href="http://tortoisegit.org/"&gt;TortoiseGit&lt;/a&gt; + &lt;a href="http://msysgit.github.io/"&gt;msysgit&lt;/a&gt; (git CLI) instead:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;you can use it for other things and not only for GitHub ("reads" the &lt;code&gt;github://&lt;/code&gt; protocol)&lt;/li&gt;
&lt;li&gt;you don't have to mess around with the PATH if you want to use git CLI (it installs in &lt;code&gt;%appdata%&lt;/code&gt; and you can't only include &lt;code&gt;bin\&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;msysgit comes with "git Bash"; a cool CLI with colors that shows in which &lt;code&gt;branch&lt;/code&gt; you're in; what is more, you can customize it with &lt;code&gt;.bashrc&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="showing customized git Bash" src="http://blog.aquinzi.com/images/2014/git_bash.png"&gt;&lt;/p&gt;
&lt;h2 id="create-repository"&gt;Create repository&lt;/h2&gt;
&lt;p&gt;In GitHub, create a repository with the desired name. You can log in and go to &lt;a href="https://github.com/repositories/new"&gt;https://github.com/repositories/new&lt;/a&gt; o clicking in the "&lt;kbd&gt;book&lt;/kbd&gt;".&lt;/p&gt;
&lt;h2 id="activate-github-pages"&gt;"Activate" GitHub Pages&lt;/h2&gt;
&lt;p&gt;It automatically activates when you create a &lt;code&gt;branch&lt;/code&gt; called &lt;code&gt;gh-pages&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;From web click in &lt;kbd&gt;branch master&lt;/kbd&gt;; in GW click in &lt;kbd&gt;master&lt;/kbd&gt; at the top. Search for &lt;kbd&gt;gh-pages&lt;/kbd&gt; and press &lt;kbd&gt;create branch&lt;/kbd&gt;. With CLI would be (previously cloned, look below):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;$ git checkout --orphan gh-pages    # branch local
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="admonition info"&gt;
&lt;p class="admonition-title"&gt;Info&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--orphan&lt;/code&gt; creates a &lt;code&gt;branch&lt;/code&gt; separated from the rest of the repo (without &lt;em&gt;parents&lt;/em&gt;). First, the &lt;code&gt;branch&lt;/code&gt; is created locally and then sent to &lt;code&gt;origin&lt;/code&gt; (steps below).&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id="get-it-in-desktop-to-work-with-it"&gt;Get it in desktop (to work with it)&lt;/h2&gt;
&lt;p&gt;From GitHub click in &lt;kbd&gt;Clone in desktop&lt;/kbd&gt; (that GW or Tortoise will recieve) or from CLI:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;$ git clone https://github.com/user/nice_repo.git
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="prepare-gh-pages-branch"&gt;Prepare gh-pages branch&lt;/h2&gt;
&lt;p&gt;Switch to &lt;code&gt;gh-pages&lt;/code&gt;. In CLI, if you used the above command (&lt;code&gt;git checkout --orphan gh-pages&lt;/code&gt;) it switches automatically, otherwise &lt;code&gt;git checkout -b gh-pages&lt;/code&gt; to switch and create a local &lt;code&gt;branch&lt;/code&gt; called "gh-pages".&lt;/p&gt;
&lt;div class="admonition info"&gt;
&lt;p class="admonition-title"&gt;Info&lt;/p&gt;
&lt;p&gt;When switching &lt;em&gt;branches&lt;/em&gt;, Windows Explorer "refreshes" the folder with the content of the selected &lt;code&gt;branch&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Delete all the files (because they're from &lt;code&gt;master&lt;/code&gt; and we don't want them) and we c-p.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;$ git rm -rf .                      # delete everything
$ git commit -m "Initiating gh-pages"
$ git push -u origin gh-pages       # send branch to origin
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="gh-pages-as-default-and-delete-master"&gt;gh-pages as default and delete master&lt;/h2&gt;
&lt;p&gt;This is optional, depends on your &lt;em&gt;workflow&lt;/em&gt; or usage idea. If you're only going to use &lt;code&gt;gh-pages&lt;/code&gt;, you can use it as default and delete the &lt;code&gt;master branch&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To make it default (and not use &lt;code&gt;master&lt;/code&gt;), in GitHub, go to &lt;kbd&gt;settings &amp;gt; (settings &amp;gt;) Default branch&lt;/kbd&gt; and select &lt;kbd&gt;gh-pages&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;To delete &lt;code&gt;master&lt;/code&gt; you must have &lt;code&gt;gh-pages&lt;/code&gt; as default. Then, go to the &lt;em&gt;branches&lt;/em&gt; listing and click in &lt;kbd&gt;Delete branch&lt;/kbd&gt;. With CLI:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;$ git branch -d master     # delete local
$ git push origin :master  # delete from repo
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="its-alive-testing-file-and-upload"&gt;It's alive! (Testing file and upload)&lt;/h2&gt;
&lt;p&gt;Create an &lt;code&gt;index.html&lt;/code&gt;, add it and c-p.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;$ git add .                   # adds all
$ git commit -am "First commit to pages"
$ git push origin gh-pages
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(&lt;code&gt;-a&lt;/code&gt; is an abbreviation of &lt;code&gt;add&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;Wait a couple of minutes and check if &lt;code&gt;index&lt;/code&gt; is uploaded in: &lt;kbd&gt;http://user.github.io/projectName/&lt;/kbd&gt;&lt;/p&gt;
&lt;h2 id="custom-domain"&gt;Custom domain&lt;/h2&gt;
&lt;p&gt;As you probably don't want to enter to &lt;kbd&gt;http://user.github.io/projectName/&lt;/kbd&gt; because is too long or it's kind of unprofessional, GitHub allows you to assign a custom domain/subdomain to it.&lt;/p&gt;
&lt;p&gt;You only need to create a &lt;code&gt;CNAME&lt;/code&gt; file which has the domain/subdomain that you want to use, in the root of &lt;code&gt;gh-pages&lt;/code&gt; and change the DNS in host/registrar:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;With a root domain (www.example.com): create a new &lt;code&gt;A record&lt;/code&gt; with the IP to &lt;kbd&gt;204.232.175.78&lt;/kbd&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With a subdomain (sub.example.com): create a &lt;code&gt;CNAME record&lt;/code&gt; that points to GitHub user subdomain (&lt;kbd&gt;user.github.io&lt;/kbd&gt;). This allows the DNS to adjust automatically to GitHub's IP; you can use a &lt;code&gt;A record&lt;/code&gt; but it won't update automatically.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="404-pages-everyone-loves-error-pages"&gt;404 pages! (Everyone loves error pages)&lt;/h2&gt;
&lt;p&gt;It's easy too: create a &lt;code&gt;404.html&lt;/code&gt; in &lt;code&gt;gh-pages&lt;/code&gt;'s root and done (don't forget to add and c-p).&lt;/p&gt;
&lt;section id="changes"&gt;

&lt;h2&gt;Changes&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;time&gt;2014-01-02&lt;/time&gt; Rewritten to be more explanatory.&lt;/li&gt;
&lt;/ol&gt;

&lt;/section&gt;</description><category>git</category><category>github</category><guid>http://blog.aquinzi.com/gh-pages-project/</guid><pubDate>Wed, 01 Jan 2014 00:00:00 GMT</pubDate></item><item><title>Windows 7: Arreglar los iconos en Explorer</title><link>http://blog.aquinzi.com/windows7-shell-icons/</link><dc:creator>A.Q.</dc:creator><description>&lt;p&gt;Con esta era de usar programitas varios para sincronizar, otros para control de código, y otros que no puedo recordar ahora; es necesario tener los overlay icons en Windows Explorer:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ejemplo de iconos de estado" src="http://blog.aquinzi.com/images/2013/win7_shell_icons.png"&gt;&lt;/p&gt;
&lt;p&gt;Personalmente se me desaparecían y, aunque limpiara la cache de los programas, nunca aparecían. Hay algunos que podes vivir sin ellos, pero otros no. Capaz instalaste un &lt;a href="https://copy.com?r=hQHBH9"&gt;programa&lt;/a&gt; y te desplazó los de &lt;a href="https://www.dropbox.com/referrals/NTYxNzc3MDQ5"&gt;otro&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;¿Pero cuál es el problema? Que los genios de Microsoft limitan la cantidad de iconos que se pueden usar a unos meros &lt;strong&gt;11 iconos totales para el usuario&lt;/strong&gt;. WHAT THE HELL.&lt;/p&gt;
&lt;p&gt;Para arreglar el tema hay que pasar por el registro. Entrá al bonito &lt;code&gt;regedit&lt;/code&gt; y navegá hasta &lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\ShellIconOverlayIdentifiers\&lt;/code&gt;. Antes de tocar mano, hacete un backup del &lt;code&gt;.reg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;La idea es que de los 30 que debes tener, solo elegis los 11 mas importantes. ¿Cómo decidis la importancia? renombrandolos, porque Windows los elige por orden alfabético. Poneles números adelante o "z", "x", "y", esas letras que no se usan. Yo prioricé algunos de TortoiseSVN, un par de &lt;a href="https://www.dropbox.com/referrals/NTYxNzc3MDQ5"&gt;Dropbox&lt;/a&gt;, y el resto como sea el orden.&lt;/p&gt;
&lt;p&gt;Una vez que estás feliz, reiniciá el explorer.exe: &lt;kbd&gt;Administrador de tareas &amp;gt; matar explorer&lt;/kbd&gt;&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="http://blog.aquinzi.com/windows7-shell-icons/#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;. Después lo inicias en &lt;kbd&gt;Nueva tarea&lt;/kbd&gt; (o si queres desloguearte y loguearte, si queres reiniciar también, pero no hace falta).&lt;/p&gt;
&lt;p&gt;Fuente: &lt;a href="http://www.oliverpearmain.com/blog/dropbox-and-tortoise-svnsubversion-icon-overlays-in-harmony/"&gt;oliverpearmain: Dropbox and TortoiseSVN icons overlays in harmony&lt;/a&gt;&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Kill, kill, kill! &lt;a class="footnote-backref" href="http://blog.aquinzi.com/windows7-shell-icons/#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><guid>http://blog.aquinzi.com/windows7-shell-icons/</guid><pubDate>Thu, 12 Dec 2013 00:00:00 GMT</pubDate></item><item><title>pandy</title><link>http://blog.aquinzi.com/pandy/</link><dc:creator>A.Q.</dc:creator><description>&lt;p&gt;&lt;a href="http://aquinzi.com/projects/pandy.php"&gt;pandy&lt;/a&gt; is a command line wrapper for &lt;a href="http://johnmacfarlane.net/pandoc/"&gt;pandoc&lt;/a&gt; + cool stuff (if you use markdown -&amp;gt; html)&lt;/p&gt;
&lt;p&gt;Basically takes a file/folder, input the markup to convert from, the output markup and runs it through pandoc.&lt;/p&gt;
&lt;h2 id="usage"&gt;Usage&lt;/h2&gt;
&lt;p&gt;To use the script, just call it with something like:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;pandy source format_from format/s_to [other options]
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="features"&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A bit easier syntax around pandoc commands (I can't never remember them)&lt;/li&gt;
&lt;li&gt;Output folder keeping or not the folder structure&lt;/li&gt;
&lt;li&gt;Source can be a file, a folder or a .list containing file paths&lt;/li&gt;
&lt;li&gt;Formats: some of them have abbreviations (see below)&lt;/li&gt;
&lt;li&gt;Output format: you can have more than one! just separate them with spaces&lt;/li&gt;
&lt;li&gt;You can create a nice book (html, just adds navigation links between files). If you don't like/want "Next-Prev" navigation links, you can use the file's title. It creates a nice simple index file or you can include your own.&lt;/li&gt;
&lt;li&gt;Use a config file: so you don't have to remember all the arguments or write a "wrapper" script for a "wrapper" script :)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[TOCME]&lt;/code&gt; support. That means that a file that has it, will have a TOC. No more separating files: these ones with TOC, these ones without, and finally place them in the same folder.&lt;/li&gt;
&lt;li&gt;If you use markdown and convert to HTML there are some goodies for you! abbreviations (real abbreviations, like that they are parsed and not ignored as pandoc does) and admonitions.&lt;/li&gt;
&lt;li&gt;"WikiLinks" for your custom index file!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information and explanation, go to &lt;a href="http://aquinzi.com/projects/pandy.php"&gt;pandy project page&lt;/a&gt;.&lt;/p&gt;</description><category>python</category><category>code</category><category>pandoc</category><category>markdown</category><guid>http://blog.aquinzi.com/pandy/</guid><pubDate>Wed, 11 Dec 2013 00:00:00 GMT</pubDate></item><item><title>svnlog: make changelog from SVN</title><link>http://blog.aquinzi.com/svnlog/</link><dc:creator>A.Q.</dc:creator><description>&lt;p&gt;&lt;a href="http://aquinzi.com/projects/svnlog.php"&gt;svnlog&lt;/a&gt; is a python script to create a changelog from a repository log.&lt;/p&gt;
&lt;p&gt;Examples of output (default):&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;2013-11-25:
    changed arguments (better handling)
    fix: output path with one file
    fix: finding &amp;lt;h1&amp;gt;

2013-11-19:
    fixed: now files are saved according to source dir tree
    + option to save files in one depth dir

2013-11-19:
    + relative links for book
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can group that too:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;2013-11-25:
    changed arguments (better handling)
    fix: output path with one file
    fix: finding &amp;lt;h1&amp;gt;

2013-11-19:
    fixed: now files are saved according to source dir tree
    + option to save files in one depth dir
    + relative links for book
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It has some basic options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Show author with &lt;code&gt;--show-author&lt;/code&gt; or &lt;code&gt;-a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Show revision number with &lt;code&gt;--show-rev&lt;/code&gt; or &lt;code&gt;-r&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Show time with &lt;code&gt;--show-time&lt;/code&gt; or &lt;code&gt;-t&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Prefix with a char using &lt;code&gt;--prefix&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Reverse the order (default: new to old) with &lt;code&gt;--reverse&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Specify date or a range (&lt;a href="https://en.wikipedia.org/wiki/ISO_8601"&gt;ISO 8601&lt;/a&gt;) with &lt;code&gt;--date&lt;/code&gt;. You can leave the second date empy (&lt;code&gt;date1:&lt;/code&gt;) to include today&lt;/li&gt;
&lt;li&gt;If you are better with revision numbers, you can specify one or a range with &lt;code&gt;--revision&lt;/code&gt;. You can leave the second revision empty (&lt;code&gt;rev1:&lt;/code&gt;) to include HEAD revision&lt;/li&gt;
&lt;li&gt;Group the dates with &lt;code&gt;--group&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Also group revisions with &lt;code&gt;--subgroup&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Or group dates but show it inline: &lt;code&gt;--inline&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Just make sure you have a SVN CLI in your path and then run &lt;a href="http://aquinzi.com/projects/svnlog.php"&gt;svnlog&lt;/a&gt; with the options you desire&lt;/p&gt;</description><category>python</category><category>code</category><category>svn</category><guid>http://blog.aquinzi.com/svnlog/</guid><pubDate>Mon, 02 Dec 2013 00:00:00 GMT</pubDate></item><item><title>pymd: wrapper for Python Markdown</title><link>http://blog.aquinzi.com/pymd/</link><dc:creator>A.Q.</dc:creator><description>&lt;div class="admonition info"&gt;
&lt;p class="admonition-title"&gt;Hey!&lt;/p&gt;
&lt;p&gt;pymd is now available in &lt;a href="https://pypi.python.org/pypi/pymd"&gt;PyPI&lt;/a&gt;. That means that you can install it like &lt;code&gt;pip install pymd&lt;/code&gt; :)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="http://aquinzi.com/projects/pymd.php"&gt;pymd&lt;/a&gt; is a command line wrapper for &lt;a href="http://pythonhosted.org/Markdown/"&gt;Python Markdown&lt;/a&gt; library but having a full HTML file instead of only what it's originally parsed.&lt;/p&gt;
&lt;h2 id="features"&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Batch process files (in folder or in a .list) with .md, .txt or .markdown extensions&lt;/li&gt;
&lt;li&gt;Specify an output folder (with automatic creation)&lt;/li&gt;
&lt;li&gt;Includes all the extensions installed by Python Markdown and you can even specify your own!&lt;/li&gt;
&lt;li&gt;Merge files into one big HTML or create a little book with navigation links. You can even create your own index!&lt;/li&gt;
&lt;li&gt;CSSed: leave the no-so-ugly embeded CSS (you can even switch between sans and serif fonts) or link to one of your own if you prefer.&lt;/li&gt;
&lt;li&gt;Headers for files! So you can share the same metadata (like your beautiful name and the creative title of your work) in all the files or when you merge the files and forgot to include the main title of your project.&lt;/li&gt;
&lt;li&gt;Wiki links: &lt;code&gt;[](file|path) -&amp;gt; [title linked file](output_path)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Made with love &amp;lt;3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Find more information and examples in &lt;a href="http://aquinzi.com/projects/pymd.php"&gt;pymd's project page&lt;/a&gt; &lt;/p&gt;</description><category>python</category><category>code</category><category>markdown</category><guid>http://blog.aquinzi.com/pymd/</guid><pubDate>Sun, 17 Nov 2013 00:00:00 GMT</pubDate></item><item><title>foobar2000 theme: Tomorrow Night Bright</title><link>http://blog.aquinzi.com/foobar2000-theme-tomorrow-night/</link><dc:creator>A.Q.</dc:creator><description>&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/foobar2000-theme-tomorrow-night/#screenshots"&gt;Screenshots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/foobar2000-theme-tomorrow-night/#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Playing with foobar2000's Default UI, I made this minimalistic/simple theme with &lt;a href="https://github.com/ChrisKempson/Tomorrow-Theme"&gt;Tomorrow theme&lt;/a&gt; colors (Night Bright version).&lt;/p&gt;
&lt;h2 id="screenshots"&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;You've got the menu + playback controls in the same line. Underneath, seekbar + playlist dropdown. In the status bar is the time, rating (view) and volume.&lt;/p&gt;
&lt;p&gt;There four views/tabs in total:&lt;/p&gt;
&lt;p&gt;"Now" has the active playlist, grouped by artist (in blue) + album (green). Tracks only show their title (red) and comment (orange).&lt;/p&gt;
&lt;p&gt;&lt;img alt="Active playlist" src="http://blog.aquinzi.com/images/2013/foobar_tomorrow_now.png"&gt;&lt;/p&gt;
&lt;p&gt;"Lyrics" has the cover art and the lyrics.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Lyrics panel" src="http://blog.aquinzi.com/images/2013/foobar_tomorrow_lyrics.png"&gt;&lt;/p&gt;
&lt;p&gt;"Meta" is the playing track details.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Track properties" src="http://blog.aquinzi.com/images/2013/foobar_tomorrow_meta.png"&gt;&lt;/p&gt;
&lt;p&gt;"Library" is self explanatory.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tree library" src="http://blog.aquinzi.com/images/2013/foobar_tomorrow_library.png"&gt;&lt;/p&gt;
&lt;p&gt;There's no playlist list (only the dropdown) because I couldn't find one that prevents me from accidental deletion :P. If you want to manage them, go to &lt;kbd&gt;View &amp;gt; Playlist Manager&lt;/kbd&gt;&lt;/p&gt;
&lt;h2 id="requirements"&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.foobar2000.org/"&gt;foobar2000&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://foo2k.chottu.net/"&gt;EsPlaylist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.foobar2000.org/components/view/foo_uie_lyrics3"&gt;Lyric Show Panel 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mediafire.com/?qb2v62gt01uzr8h"&gt;theme + configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Place the EsPlaylist configuration (&lt;code&gt;foo_uie_esplaylist.dll.cfg&lt;/code&gt;) in &lt;code&gt;[foobar_home]/configuration&lt;/code&gt; and the theme (&lt;code&gt;tomorrowbright.fth&lt;/code&gt;) where you please.&lt;/p&gt;
&lt;p&gt;Import the theme (&lt;kbd&gt;Preferences &amp;gt; Display &amp;gt; Default User Interface &amp;gt; Import theme&lt;/kbd&gt;). In the playlist, &lt;kbd&gt;right click &amp;gt; grouping &amp;gt; inline - Tomorrow night bright&lt;/kbd&gt;. In the lyrics panel, edit the preferences (&lt;kbd&gt;panel preferences&lt;/kbd&gt;) and change the &lt;code&gt;highlight color&lt;/code&gt; to RGB &lt;code&gt;236,206,88&lt;/code&gt; (yellow).&lt;/p&gt;
&lt;p&gt;The "headers" colors (in playlist, the &lt;code&gt;%artist%&lt;/code&gt;, &lt;code&gt;%album%&lt;/code&gt;; and in "meta", the "metadata", "location", "other"...) is configurated in &lt;kbd&gt;Default User Interface &amp;gt; Colors and fonts&lt;/kbd&gt; (if you don't like violet).&lt;/p&gt;
&lt;p&gt;If you want to change the control buttons, you must use 16x16 &lt;code&gt;.ico&lt;/code&gt; files.&lt;/p&gt;
&lt;p&gt;The Windows theme is &lt;a href="http://www.deviantart.com/art/SlanXP-2-0-For-7-134955170"&gt;SlanXP2 for 7&lt;/a&gt;, that's way the DUI looks better than defaults.&lt;/p&gt;</description><category>foobar2000</category><category>theme</category><guid>http://blog.aquinzi.com/foobar2000-theme-tomorrow-night/</guid><pubDate>Thu, 07 Nov 2013 00:00:00 GMT</pubDate></item><item><title>Box: WebDAV access</title><link>http://blog.aquinzi.com/box-webdav/</link><dc:creator>A.Q.</dc:creator><description>&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/box-webdav/#windows-explorer"&gt;Windows Explorer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/box-webdav/#bitkinex"&gt;BitKinex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;To access to syncing servicies via &lt;a href="http://en.wikipedia.org/wiki/WebDAV"&gt;WebDAV&lt;/a&gt;, and see them in a file manager without installing the client -&amp;gt; wait to load -&amp;gt; index -&amp;gt; do the sync dance just to get one file&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="http://blog.aquinzi.com/box-webdav/#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;, it's priceless&lt;sup id="fnref:priceless"&gt;&lt;a class="footnote-ref" href="http://blog.aquinzi.com/box-webdav/#fn:priceless" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;I decided to do this because I wanted to do something that needed a &lt;abbr title='The "old" thingy'&gt;FTP&lt;/abbr&gt;. Lately (or always was like that), you can't create a &lt;abbr title='The "old" thingy'&gt;FTP&lt;/abbr&gt; account only, you must create a web site first. Not interested. I don't have a server/computer (proyect pending)  acting as a server and install &lt;a href="https://filezilla-project.org"&gt;FileZilla&lt;/a&gt;. Damnit. I remembered the sync servicies that I have an account with and jumped into using them.&lt;/p&gt;
&lt;p&gt;I chose &lt;a href="http://www.box.com"&gt;Box&lt;/a&gt;. I thought into uploading the files via the web interface, given that the synchronization is a bit bad, but I realized that &lt;a href="https://www.sugarsync.com/"&gt;SugarSync&lt;/a&gt; has the "SugarSync Drive" feature, that allows you to access your file through a file manager. I started to search if Box had something similar.&lt;/p&gt;
&lt;p&gt;It has &lt;abbr title='The "old" thingy'&gt;FTP&lt;/abbr&gt; access but only for paid accounts. Then I read about WebDAV. Tried to configurate it and, after struggling for minutes, here is how to do it in Windows (7)&lt;/p&gt;
&lt;h2 id="windows-explorer"&gt;Windows Explorer&lt;/h2&gt;
&lt;p&gt;In "Computer" (the old "My PC"), go to &lt;kbd&gt;Map network drive&lt;/kbd&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Context menu" src="http://blog.aquinzi.com/images/2013/webdav_mapnetwork.png"&gt;&lt;/p&gt;
&lt;p&gt;Select the drive (doesn't matter apparently), check &lt;kbd&gt;Reconnect at logon&lt;/kbd&gt;. Click on &lt;kbd&gt;Connect to a Web site that you use to store...&lt;/kbd&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Configuration window" src="http://blog.aquinzi.com/images/2013/webdav_mapnetwork_config.png"&gt;&lt;/p&gt;
&lt;p&gt;In the new popup window, select &lt;kbd&gt;Choose a custom network location&lt;/kbd&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Configuration window" src="http://blog.aquinzi.com/images/2013/webdav_mapnetwork_location.png"&gt;&lt;/p&gt;
&lt;p&gt;Now the fun part that gave me headaches: the address.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Configuration window" src="http://blog.aquinzi.com/images/2013/webdav_mapnetwork_address.png"&gt;&lt;/p&gt;
&lt;p&gt;You can input:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For the whole folder/account: &lt;code&gt;https://dav.box.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For specific folder: &lt;code&gt;https://dav.box.com/dav/FOLDER&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;New popup window for log in. Enter the Box user/e-mail and password.&lt;/p&gt;
&lt;p&gt;Optional, in the next window rename the folder:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Configuration window" src="http://blog.aquinzi.com/images/2013/webdav_mapnetwork_name.png"&gt;&lt;/p&gt;
&lt;p&gt;And here is the hardwork done:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Showing mapped drive" src="http://blog.aquinzi.com/images/2013/webdav_networks_computer.png"&gt;&lt;/p&gt;
&lt;p&gt;If this doesn't work for you, you can use &lt;a href="http://rei.to/carotdav_en.html"&gt;CarotDAV&lt;/a&gt; (to view al the servicies in one portable program), the famous &lt;a href="http://www.ghisler.com/download.htm"&gt;Total Commander&lt;/a&gt; or BitKinex.&lt;/p&gt;
&lt;h2 id="bitkinex"&gt;BitKinex&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.bitkinex.com/download"&gt;Download BitKinex&lt;/a&gt;. Install normally, but I recommend (because I read somewhere) uncheck the "I want to configure data source now" option (apparently does nothing)&lt;/p&gt;
&lt;p&gt;Once initiated (yes, it looks very small for some reason), look for Http/WebDAV, &lt;kbd&gt;right click &amp;gt; New &amp;gt; Http/WebDAV&lt;/kbd&gt; and enter a name.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Creating service" src="http://blog.aquinzi.com/images/2013/webdav_bitkinex_new.png"&gt;&lt;/p&gt;
&lt;p&gt;The address is similar to above: &lt;code&gt;dav.box.com&lt;/code&gt;, select &lt;kbd&gt;&lt;abbr title="Security before all"&gt;SSL&lt;/abbr&gt;&lt;/kbd&gt;. Enter user and password:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Configuration window" src="http://blog.aquinzi.com/images/2013/webdav_bitkinex_server.png"&gt;&lt;/p&gt;
&lt;p&gt;I also read (optional) that you can include a path in the Site map (don't know why, didn't noticed a difference). You configurate it going to &lt;kbd&gt;Site Map&lt;/kbd&gt; (under where you're now/Server) and adding/modifyng the path with &lt;code&gt;/dav&lt;/code&gt;, picking &lt;kbd&gt;Directory WebDAV-compliant&lt;/kbd&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Configuration window" src="http://blog.aquinzi.com/images/2013/webdav_bitkinex_sitemap.png"&gt;&lt;/p&gt;
&lt;p&gt;And done, you just doble click it to connect:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Service added" src="http://blog.aquinzi.com/images/2013/webdav_bitkinex_connection.png"&gt;&lt;/p&gt;
&lt;p&gt;Source: &lt;a href="https://box.zendesk.com/entries/21534903"&gt;Box zendesk&lt;/a&gt;&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;The mayority of people use the servicies as file hosting &lt;a class="footnote-backref" href="http://blog.aquinzi.com/box-webdav/#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:priceless"&gt;
&lt;p&gt;literally. Nowadays, the operative systems have the feature built-in (more, less or not bugged) &lt;a class="footnote-backref" href="http://blog.aquinzi.com/box-webdav/#fnref:priceless" rev="footnote" title="Jump back to footnote 2 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><category>box</category><category>sync</category><category>windows7</category><category>webdav</category><guid>http://blog.aquinzi.com/box-webdav/</guid><pubDate>Sun, 04 Aug 2013 00:00:00 GMT</pubDate></item><item><title>proDO: super simple bug/issue tracker</title><link>http://blog.aquinzi.com/prodo/</link><dc:creator>A.Q.</dc:creator><description>&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/prodo/#background"&gt;Background&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.aquinzi.com/prodo/#script"&gt;Say hi to proDO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="admonition attention"&gt;
&lt;p class="admonition-title"&gt;Atención&lt;/p&gt;
&lt;p&gt;Si no te interesa la historia del por qué se escribió el script y/o no queres saber sobre programitas, adelantate hasta &lt;a href="http://blog.aquinzi.com/prodo/#script"&gt;acá&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id="background"&gt;Background&lt;/h2&gt;
&lt;p&gt;Cuando desarrollas o escribis código (o palabras, por qué no) necesitas algún tipo de bug/issue tracker. Eso es normal para proyectos grandes o con varias personas, pero al ser un solo individuo o el proyecto es chico, todas las opciones son como mucho.&lt;/p&gt;
&lt;p&gt;A algunos no les importa e instalan grandes bug trackers, otros usan algo mas simple. Otros vamos por la old school y escribimos en papel. Otras escribimos en un .txt, que puede ser un simple archivo o con esos ToDo.txt/&lt;a href="http://taskwarrior.org/"&gt;taskwarrior&lt;/a&gt;&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="http://blog.aquinzi.com/prodo/#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Si el proyecto es medianamente grande (más grande que un mero script), escribo en papel. Si es algo simple/un script, anoto las cosas dentro del archivo, como varias personas.&lt;/p&gt;
&lt;p&gt;El problema que tengo es que me gusta listar todas las cositas esas con el numero de linea y/o click que me lleve a tal. No todos los editores lo hacen por default (creo que las grandes IDEs), seguro hay un plugin que ni ganas de configurar. Se puede hacer una búsqueda, que es lo mas cercano a lo que quiero.&lt;/p&gt;
&lt;p&gt;Uso dos editores de texto dependiendo del trabajo que tengo que hacer: &lt;a href="http://www.sublimetext.com/"&gt;Sublime Text&lt;/a&gt; para trabajos "grandes" (por alguna razón) y &lt;a href="http://www.notepad-plus-plus.org/"&gt;Notepad++&lt;/a&gt;. En ambos se puede hacer búsquedas por proyecto/archivos abiertos, la diferencia es que en Sublime Text te abre una pestañita de miercoles con los resultados (not fun), y Notepad++ te los muestra en una ventanita dockeable (good):&lt;/p&gt;
&lt;p&gt;&lt;img alt="Resultados de búsqueda en Notepad++" src="http://blog.aquinzi.com/images/2013/search_notepadpp.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Qué no me gusta de esto? La forma en que te lo muestra&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="http://blog.aquinzi.com/prodo/#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; y el hecho que Notepad++ tiene otro tipo de regex que, según expertos, es mas pobre.&lt;/p&gt;
&lt;p&gt;Lo más lógico es usar grep. Si usas Linux, ya viene por defecto, sino con algo como &lt;a href="http://cygwin.com/"&gt;Cygwin&lt;/a&gt; en Windows (u otras variantes). Hasta le podes poner colorcitos pero solo a una cosa (el string encontrado). No está mal tampoco pero no es muy limpio&lt;sup id="fnref:6"&gt;&lt;a class="footnote-ref" href="http://blog.aquinzi.com/prodo/#fn:6" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Resultados de búsqueda con grep" src="http://blog.aquinzi.com/images/2013/search_grep.png"&gt;&lt;/p&gt;
&lt;p&gt;Si no te gustan las terminales/lineas de comandos pero queres usar grep, hay varios programitas que te dejan (hacer una especie de) grep&lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="http://blog.aquinzi.com/prodo/#fn:3" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Tenes &lt;a href="http://www.mythicsoft.com/agentransack/"&gt;Agent Ransack&lt;/a&gt;, donde quedaría asi:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Resultados de busqueda con Agent Ransack" src="http://blog.aquinzi.com/images/2013/search_agent.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Para este tipo de trabajos no me gusta por que tengo que clickear archivo por archivo (not fun).&lt;/p&gt;
&lt;p&gt;Y &lt;a href="http://stefanstools.sourceforge.net/grepWin.html"&gt;grepWin&lt;/a&gt;, donde hay que tener cuidado de clickear solo en "Search" y seleccionar la opción de "Content"&lt;/p&gt;
&lt;p&gt;&lt;img alt="Resultados de búsqueda de grepWin" src="http://blog.aquinzi.com/images/2013/search_grepWin.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Este no estaba tan mal, pero eso de abrir programa &amp;gt; rellenar datos no me convencia mucho. Por lineas de comando solo podes poner el path y qué buscar (que no esta mal) pero quiero que, por lo menos, esté seleccionado el "Content".&lt;/p&gt;
&lt;h2 id="script"&gt;Say hi to proDO&lt;/h2&gt;
&lt;p&gt;Como estoy aprendiendo Python y mas que nada lo estoy usando para hacer varios scripts&lt;sup id="fnref:4"&gt;&lt;a class="footnote-ref" href="http://blog.aquinzi.com/prodo/#fn:4" rel="footnote"&gt;5&lt;/a&gt;&lt;/sup&gt; y reemplazar/dejar de dar vueltas con los batch, me decidí a hacer el mío.&lt;/p&gt;
&lt;p&gt;Con los ejemplos anteriores, queda asi:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Resultados de búsqueda con proDO" src="http://blog.aquinzi.com/images/2013/search_nocolor.png"&gt;&lt;/p&gt;
&lt;p&gt;Pero si tenes &lt;a href="https://pypi.python.org/pypi/colorama"&gt;colorama&lt;/a&gt; instalado queda asi (con mas onda):&lt;/p&gt;
&lt;p&gt;&lt;img alt="Resultados de búsqueda con proDO con color" src="http://blog.aquinzi.com/images/2013/search_color.png"&gt;&lt;/p&gt;
&lt;p&gt;Datos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solo busca las palabras TODO y FIXME (es case insensitive: también podes poner ToDo, todo, tODO, etc)&lt;/li&gt;
&lt;li&gt;Por default, al correr el programa te lista los archivos desde donde corre el script &lt;sup id="fnref:5"&gt;&lt;a class="footnote-ref" href="http://blog.aquinzi.com/prodo/#fn:5" rel="footnote"&gt;6&lt;/a&gt;&lt;/sup&gt;, ignorando los &lt;code&gt;.bak&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Se puede especificar la ruta a buscar, corriendo &lt;code&gt;proDO.py -s/-source [rutita linda]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Se puede eliminar las lineas con: &lt;code&gt;proDO.py del/d [archivo] [linea]&lt;/code&gt; (automaticamente hace un backup (&lt;code&gt;.bak&lt;/code&gt;) del archivo por si se pone loca)&lt;/li&gt;
&lt;li&gt;Si necesitas ejemplos de lo de arriba o queres mirar qué linda hice la ayuda: &lt;code&gt;proDO.py -h&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Si no queres escribir &lt;code&gt;proDO.py&lt;/code&gt; (la extensión es importante en Windows), podes crear un "wrapper batch": en (ejemplo) proDO.bat poner: &lt;code&gt;proDO.py %*&lt;/code&gt;. Guardás y listo, ya lo podes llamar como &lt;code&gt;proDO&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Decarga y más información en la &lt;a href="http://aquinzi.com/es/projects/prodo.php"&gt;página de proDO&lt;/a&gt;&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Que esta lindo, es para linux o con Windows + &lt;a href="http://cygwin.com/"&gt;Cygwin&lt;/a&gt;, pero es mucho trabajo para configurarlo para esto. &lt;a class="footnote-backref" href="http://blog.aquinzi.com/prodo/#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;Mentira, me acordé después de hacer el script. Lo testeé y no anda mal. Sólo que no se puede buscar por proyectos, asi que hay que escribir el path en la búsqueda o abrir todos los archivos. &lt;a class="footnote-backref" href="http://blog.aquinzi.com/prodo/#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:6"&gt;
&lt;p&gt;Se puede limpiar/formatear con awk, pero tuve problemas con Cygwin que no traía el ejecutable para la herramienta (!) &lt;a class="footnote-backref" href="http://blog.aquinzi.com/prodo/#fnref:6" rev="footnote" title="Jump back to footnote 3 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;No sé exactamente la diferencia entre grep y buscar dentro de los archivos (con regex), yo lo uso intercambiablemente. &lt;a class="footnote-backref" href="http://blog.aquinzi.com/prodo/#fnref:3" rev="footnote" title="Jump back to footnote 4 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:4"&gt;
&lt;p&gt;por que se me complicó con eso de buscar una IDE para la parte gráfica. &lt;a class="footnote-backref" href="http://blog.aquinzi.com/prodo/#fnref:4" rev="footnote" title="Jump back to footnote 5 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:5"&gt;
&lt;p&gt;en Linux es más fácil (por lo menos en xfce): &lt;kbd&gt;botón derecho &amp;gt; terminal&lt;/kbd&gt;. En Windows tenes que apretar &lt;kbd&gt;shift + botón derecho&lt;/kbd&gt;. &lt;a class="footnote-backref" href="http://blog.aquinzi.com/prodo/#fnref:5" rev="footnote" title="Jump back to footnote 6 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><guid>http://blog.aquinzi.com/prodo/</guid><pubDate>Fri, 26 Jul 2013 00:00:00 GMT</pubDate></item></channel></rss>